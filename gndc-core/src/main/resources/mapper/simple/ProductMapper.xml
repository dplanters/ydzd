<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gndc.core.mapper.simple.ProductMapper">

    <resultMap id="aoProductListResultMap" type="com.gndc.core.api.admin.product.AOProductListResponse">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="partner_name" jdbcType="VARCHAR" property="partnerName" />
        <result column="coope_mode" jdbcType="TINYINT" property="coopeMode" />
        <result column="logo_url" jdbcType="VARCHAR" property="logoUrl" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="borrow_time_description" jdbcType="VARCHAR" property="borrowTimeDescription" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="hot_status" jdbcType="TINYINT" property="hotStatus" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="online_time" jdbcType="TIMESTAMP" property="onlineTime" />
        <result column="offline_time" jdbcType="TIMESTAMP" property="offlineTime" />
        <result column="coope_price" jdbcType="DECIMAL" property="coopePrice" />
        <result column="borrow_amount_range" jdbcType="VARCHAR" property="borrowAmountRange" />
        <result column="borrow_time_range" jdbcType="VARCHAR" property="borrowTimeRange" />
    </resultMap>

    <select id="aoProductListCount" resultType="long">
        select
        count(*)
        from dc_product a
        left join dc_product_data b on a.id=b.product_id
        left join dc_product_hot c on c.product_id = a.id
        left join dc_partner d on a.partner_id = d.id
        where 1 = 1 and
        <if test="sqlWhere != null">
            <trim prefix="(" prefixOverrides="and" suffix=")">
                <if test="sqlWhere.coopeMode != null and sqlWhere.coopeMode != 0">
                    and a.coope_mode=#{sqlWhere.coopeMode}
                </if>
                <if test="sqlWhere.status != null and sqlWhere.status != 0">
                    and a.status=#{sqlWhere.status}
                </if>
                <if test="sqlWhere.partnerId != null and sqlWhere.partnerId != 0">
                    and a.partner_id=#{sqlWhere.partnerId}
                </if>
                <if test="sqlWhere.startDate != null and sqlWhere.startDate != ''">
                    and date(a.create_time) &gt;= str_to_date(#{sqlWhere.startDate}, '%Y-%m-%d %H:%i:%s')
                </if>
                <if test="sqlWhere.endDate != null and sqlWhere.endDate != ''">
                    and date(a.create_time) &lt;= str_to_date(#{sqlWhere.endDate},'%Y-%m-%d %H:%i:%s')
                </if>
                <if test="'1 = 1'">
                    and b.data_type = 1 and a.is_del = 1
                </if>
            </trim>
        </if>
    </select>

    <select id="aoProductList" resultMap="aoProductListResultMap">
        select
        a.id,
        a.name,
        a.coope_mode,
        a.logo_url,
        a.description,
        a.status,
        a.online_time,
        a.offline_time,
        a.create_time,
        a.coope_price,
        concat(floor(a.borrow_amount_begin),'~',floor(a.borrow_amount_end)) as borrow_amount_range,
        concat(b.borrow_period_start,'~', b.borrow_period_end) as borrow_time_range,
        b.borrow_time_description,
        c.status hot_status,
        a.day_rate,
        d.name partner_name
        from dc_product a
        left join dc_product_data b on a.id=b.product_id
        left join dc_product_hot c on c.product_id = a.id
        left join dc_partner d on a.partner_id = d.id
        where
        <if test="sqlWhere != null">
            <trim prefix="(" prefixOverrides="and" suffix=")">
                <if test="sqlWhere.coopeMode != null and sqlWhere.coopeMode != 0">
                    and a.coope_mode=#{sqlWhere.coopeMode}
                </if>
                <if test="sqlWhere.status != null and sqlWhere.status != 0">
                    and a.status=#{sqlWhere.status}
                </if>
                <if test="sqlWhere.name != null and sqlWhere.name != ''">
                    and a.name like concat('%', #{sqlWhere.name}, '%')
                </if>
                <if test="sqlWhere.partnerId != null and sqlWhere.partnerId != 0">
                    and a.partner_id=#{sqlWhere.partnerId}
                </if>
                <if test="sqlWhere.startDate != null and sqlWhere.startDate != ''">
                    and date(a.create_time) &gt;= str_to_date(#{sqlWhere.startDate}, '%Y-%m-%d %H:%i:%s')
                </if>
                <if test="sqlWhere.endDate != null and sqlWhere.endDate != ''">
                    and date(a.create_time) &lt;= str_to_date(#{sqlWhere.endDate},'%Y-%m-%d %H:%i:%s')
                </if>
                <if test="'1 = 1'">
                    and b.data_type = 1 and a.is_del = 1
                </if>
            </trim>
        </if>
    </select>

    <resultMap id="aoProductHotListResultMap" type="com.gndc.core.api.admin.product.AOProductHotListResponse">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="partner_name" jdbcType="VARCHAR" property="partnerName" />
      <result column="coope_mode" jdbcType="TINYINT" property="coopeMode" />
      <result column="hot_status" jdbcType="TINYINT" property="hotStatus" />
      <result column="position" jdbcType="TINYINT" property="position" />
      <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
      <result column="online_time" jdbcType="TIMESTAMP" property="onlineTime" />
      <result column="coope_price" jdbcType="DECIMAL" property="coopePrice" />
    </resultMap>

    <select id="aoProductHotList" resultMap="aoProductHotListResultMap">
      select
      a.id,
      a.name,
      a.coope_mode,
      a.status,
      a.coope_price,
      c.status hot_status,
      c.position position,
      c.create_time,
      c.online_time,
      d.name partner_name
      from dc_product_hot c
      left join dc_product a on c.product_id = a.id
      left join dc_partner d on a.partner_id = d.id
      where c.status = 2
      <if test="sqlWhere != null">
          <if test="sqlWhere.name != null and sqlWhere.name != ''">
            and a.name like concat('%', #{sqlWhere.name}, '%')
          </if>
          <if test="sqlWhere.partnerId != null and sqlWhere.partnerId != 0">
            and a.partner_id=#{sqlWhere.partnerId}
          </if>
      </if>
      order by position
    </select>


    <resultMap id="PHotProductResultMap" type="com.gndc.core.api.app.product.hot.PHotProductResponse">
        <result column="product_id" jdbcType="INTEGER" property="productId" />
        <result column="borrow_time_description" jdbcType="VARCHAR" property="borrowTimeDescription" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="logo_url" jdbcType="VARCHAR" property="logoUrl" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="borrow_amount_begin" jdbcType="DECIMAL" property="borrowAmountBegin" />
        <result column="borrow_amount_end" jdbcType="DECIMAL" property="borrowAmountEnd" />
        <result column="android_link" jdbcType="VARCHAR" property="androidLink" />
        <result column="ios_link" jdbcType="VARCHAR" property="iosLink" />
    </resultMap>

    <select id="selectPHotProductList" parameterType="java.lang.Byte" resultMap="PHotProductResultMap">
        select
            a.id as product_id,
            a.name,
            a.logo_url,
            a.description,
            a.borrow_amount_begin,
            a.borrow_amount_end,
            a.android_link,
            a.ios_link,
            b.borrow_time_description
            from dc_product a
            left join dc_product_data b on a.id=b.product_id and b.data_type =1 and b.status=1, dc_product_hot c
        where
              a.id=c.product_id and
              a.is_del =1 and
              a.status=2 and
              c.status=2
              GROUP BY a.id
        order by c.position
    </select>

    <resultMap id="PFindProductResultMap" type="com.gndc.core.api.app.product.find.PFindProductResponse">
        <result column="product_id" jdbcType="INTEGER" property="productId" />
        <result column="borrow_period_unit" jdbcType="TINYINT" property="borrowPeriodUnit" />
        <result column="borrow_time_description" jdbcType="VARCHAR" property="borrowTimeDescription" />
        <result column="day_rate" jdbcType="DECIMAL" property="dayRate" />
        <result column="description" jdbcType="VARCHAR" property="description" />
        <result column="logo_url" jdbcType="VARCHAR" property="logoUrl" />
        <result column="minDayRate" jdbcType="DECIMAL" property="dayRate" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="borrow_amount_begin" jdbcType="DECIMAL" property="borrowAmountBegin" />
        <result column="borrow_amount_end" jdbcType="DECIMAL" property="borrowAmountEnd" />
        <result column="borrow_period_start" jdbcType="INTEGER" property="minBorrowPeriod" />
        <result column="borrow_period_end" jdbcType="INTEGER" property="maxBorrowPeriod" />
        <result column="minBorrowPeriod" jdbcType="INTEGER" property="minBorrowPeriod" />
        <result column="maxBorrowPeriod" jdbcType="INTEGER" property="maxBorrowPeriod" />
        <result column="android_link" jdbcType="VARCHAR" property="androidLink" />
        <result column="ios_link" jdbcType="VARCHAR" property="iosLink" />
    </resultMap>
    <select id="selectPFindProductList" resultMap="PFindProductResultMap">
        select
        dp.id product_id, dp.name, dp.logo_url, dp.description,dp.status,dp.android_link, dp.ios_link, dp.borrow_amount_begin,dp.borrow_amount_end,
        dpd.day_rate,dpd.borrow_period_start,dpd.borrow_period_end,dpd.borrow_period_unit,dpd.borrow_time_description
        from dc_product dp left join dc_product_data dpd on dpd.product_id = dp.id
        where dp.is_del = 1 and dpd.data_type = 1
        <choose>
            <when test="sqlWhere.amountStart == -1">
            </when>
            <when test="sqlWhere.amountEnd == -2">
                and dp.borrow_amount_end <![CDATA[>=]]> #{sqlWhere.amountStart}
            </when>
            <otherwise>
                and (
                (dp.borrow_amount_begin <![CDATA[<=]]> #{sqlWhere.amountStart} and dp.borrow_amount_end <![CDATA[>=]]> #{sqlWhere.amountStart})
                or (dp.borrow_amount_begin <![CDATA[<=]]> #{sqlWhere.amountEnd} and dp.borrow_amount_end <![CDATA[>=]]> #{sqlWhere.amountEnd})
                )
            </otherwise>
        </choose>
        <if test="sqlWhere.optionKey == 'approve'">
            and find_in_set('1', dp.tags)
        </if>

        <if test="sqlWhere.optionKey == ''">
            order by dp.create_time desc,dp.id
        </if>

        <if test="sqlWhere.optionKey == 'rateAsc'">
            order by dpd.day_rate
        </if>
        <if test="sqlWhere.optionKey == 'borrowDesc'">
            order by dp.borrow_amount_end desc
        </if>
    </select>

    <select id="staticProductUV" resultType="com.gndc.core.api.app.product.find.PProductStaticUV">
        select count(1) staticCount,product_id productId
        from dc_event_fee
        where 1=1
        <if test="productIds != null and productIds.size &gt; 0">
            and product_id in
            <foreach close=")" collection="productIds" item="productId" open="(" separator=",">
                #{productId}
            </foreach>
        </if>
        <if test="eventTypes != null and eventTypes.size &gt; 0">
            and event_type in
            <foreach close=")" collection="eventTypes" item="eventType" open="(" separator=",">
                #{eventType}
            </foreach>
        </if>
        group by product_id
    </select>
</mapper>