<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gndc.core.mapper.simple.UserEventMapper">

    <resultMap id="downloadResultMap" type="com.gndc.core.etc.user.UserDownload">
        <result column="name" jdbcType="VARCHAR" property="productName"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="lastClickTime" jdbcType="TIMESTAMP" property="lastClickTime"/>
        <result column="is_del" jdbcType="TINYINT" property="isDel"/>
    </resultMap>

    <select id="selectUserDownloadByUserId" resultMap="downloadResultMap">
    SELECT a.product_id, b.`name`,b.status,COUNT(1) count,MAX(a.create_time) lastClickTime,b.is_del FROM dc_user_events a LEFT JOIN dc_product b ON a.product_id = b.id 
    WHERE a.user_id = #{userId, jdbcType=INTEGER} AND event_type = 3 GROUP BY product_id
     LIMIT 
       #{page.startRowNum, jdbcType=INTEGER}, #{page.size, jdbcType=INTEGER}
  </select>

    <resultMap id="ProductResultMap" type="com.gndc.core.model.ProductStatistic">
        <result column="product_id" jdbcType="INTEGER" property="prodId"/>
        <result column="name" jdbcType="VARCHAR" property="productName"/>
        <result column="hotClick" jdbcType="INTEGER" property="hotClicks"/>
        <result column="listClick" jdbcType="INTEGER" property="listClicks"/>
        <result column="downClick" jdbcType="INTEGER" property="clickDownloads"/>
        <result column="sjDownClick" jdbcType="INTEGER" property="actualDownloads"/>
        <result column="installsClick" jdbcType="INTEGER" property="actualInstalls"/>
        <result column="createtime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updatetime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="statisticDate" jdbcType="TIMESTAMP" property="statisticDate"/>
    </resultMap>
    <select id="selectGroupByProductId" resultMap="ProductResultMap">
	SELECT a.id product_id,a.hotClick,a.downClick,a.listClick,a.name,
		sum(case f.event_type when 3 then 1 else 0 end) sjDownClick,
		sum(case f.event_type when 1 then 1 else 0 end) installsClick,
		 #{now,jdbcType=TIMESTAMP} createtime,
		 #{now,jdbcType=TIMESTAMP} updatetime,
		 #{end,jdbcType=TIMESTAMP} statisticDate
		 FROM (SELECT p.id,p.`name`,
		 sum(case e.event_type when 1 then 1 else 0 end) hotClick,
		 sum(case e.event_type when 2 then 1 else 0 end) listClick,
		 sum(case e.event_type when 3 then 1 else 0 end) downClick
		 FROM dc_product p 
		 LEFT JOIN dc_user_events e ON p.id = e.product_id AND DATE(e.event_time) = date(#{end,jdbcType=TIMESTAMP}) 
		 WHERE p.is_del = 1 OR (p.is_del = -1 AND DATE(p.update_time) = date(#{end,jdbcType=TIMESTAMP})) GROUP BY p.id) a 
		 LEFT JOIN dc_appsflyer_events f ON a.id = f.product_id AND date(f.event_time) = date(#{end,jdbcType=TIMESTAMP})
		 GROUP BY a.id
  </select>
    <select id="selectUserDownloadByUserIdCount" resultType="java.lang.Long">
    SELECT count(1) FROM (SELECT a.product_id, b.`name`,b.status,COUNT(1) count,MAX(a.create_time) lastClickTime FROM dc_user_events a LEFT JOIN dc_product b ON a.product_id = b.id 
    WHERE a.user_id = #{userId, jdbcType=INTEGER} AND event_type = 3 GROUP BY product_id) as a
    </select>

    <select id="selectUVCount" resultType="java.lang.Integer">
      select count(1)
      from dc_event_fee def
      left join dc_user_events due on def.event_id = due.id
      where due.event_type in (1,2,8)
      and due.user_id = #{userId, jdbcType=INTEGER}
      and def.product_id = #{productId, jdbcType=INTEGER}
      and def.create_time between #{beginDate, jdbcType=TIMESTAMP} and #{endDate, jdbcType=TIMESTAMP}
    </select>
</mapper>